{
  "name": "@quantereall/lich",
  "description": "Lich is a library for chaining computations in TypeScript. It's heavily inspired by the monadic structures in Haskell. In particular Maybe and Either.",
  "author": "Georgi Spasov",
  "version": "1.0.0",
  "license": "BSD-2-Clause",
  "scripts": {
    "prepublish": "yarn build && yarn test",
    "prebuild": "yarn format && yarn lint",
    "build": "tsc -p tsconfig.build.json",
    "lint": "eslint -c .eslintrc.js .",
    "format": "prettier --write \"src/**/*.ts\"",
    "test": "jest"
  },
  "devDependencies": {
    "@types/jest": "^27.0.2",
    "@typescript-eslint/eslint-plugin": "^5.10.1",
    "@typescript-eslint/eslint-plugin-tslint": "^5.10.1",
    "@typescript-eslint/parser": "^5.10.1",
    "eslint": "^8.7.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-jsdoc": "^37.7.0",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "jest": "^27.3.1",
    "prettier": "^2.5.1",
    "ts-jest": "^27.0.7",
    "ts-node": "^10.4.0",
    "tslint": "^6.1.3",
    "typescript": "^4.5.5"
  },
  "homepage": "https://github.com/quanterall/lich",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/quanterall/lich.git"
  },
  "bugs": {
    "url": "https://github.com/quanterall/lich/issues"
  },
  "keywords": [
    "chaining",
    "monad",
    "either",
    "maybe",
    "quanterall",
    "functional"
  ],
  "files": [
    "/dist"
  ]
}
